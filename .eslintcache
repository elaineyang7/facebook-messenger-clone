[{"/Users/elaineyang/Desktop/react/facebook-messenger-clone/src/App.js":"1","/Users/elaineyang/Desktop/react/facebook-messenger-clone/src/message.component/message.component.jsx":"2","/Users/elaineyang/Desktop/react/facebook-messenger-clone/src/index.js":"3","/Users/elaineyang/Desktop/react/facebook-messenger-clone/src/reportWebVitals.js":"4","/Users/elaineyang/Desktop/react/facebook-messenger-clone/src/firebase.js":"5"},{"size":2370,"mtime":1610082105018,"results":"6","hashOfConfig":"7"},{"size":798,"mtime":1610084273709,"results":"8","hashOfConfig":"7"},{"size":500,"mtime":1609974921689,"results":"9","hashOfConfig":"7"},{"size":362,"mtime":1609974921690,"results":"10","hashOfConfig":"7"},{"size":507,"mtime":1609983195415,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"1qo28v0",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/elaineyang/Desktop/react/facebook-messenger-clone/src/App.js",["24","25","26"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport { Button, FormControl, InputLabel, Input } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\n\nimport Message from './message.component/message.component';\n\nimport db from './firebase';\nimport firebase from 'firebase';\nimport FlipMove from 'react-flip-move';\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([\n  ]);\n  const [username, setUsername] = useState('');\n\n  useEffect(() => {\n    // run once when the app component loads\n    db.collection('messages')\n    .orderBy('timestamp', 'asc')\n    .onSnapshot(snapshot => {\n      setMessages(snapshot.docs.map(doc => ({id: doc.id, message: doc.data()})))\n    });\n  }, [] )\n\n  useEffect(() => {\n    // run code here\n    // if its blank inside [], this code runs ONECE when the app component loads\n    setUsername(prompt('Please enter your name'));\n  }, []) //condition\n\n  const sendMessage = (event) => {\n    event.preventDefault(); // from refresh the page, we don't want it to be refrash, so add this\n    // all the logic to send message goes\n    \n    db.collection('messages').add({\n      message: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n\n    setMessages([\n      ...messages, {username: username, message: input}\n    ]);\n    setInput('');\n  }\n\n  return (\n    <div className=\"App\">\n      <img src=\"https://facebookbrand.com/wp-content/uploads/2018/09/Header-e1538151782912.png?w=100&h=100\" />\n      <h2>Welcome {username}</h2>\n\n      <form className=\"app__form\">\n        <FormControl className=\"app__formControl\">\n          <Input className=\"app__input\" placeholder='Enter a message...' value={input} onChange={event => setInput(event.target.value)} />\n          \n          <IconButton className=\"app__iconButton\" disabled={!input} variant=\"contained\" color=\"primary\"  type='submit' onClick={sendMessage}>\n            <SendIcon />\n          </IconButton>\n        \n        </FormControl>\n      </form>\n      <FlipMove className=\"App__messages\">\n        {\n          messages.map(({id, message}) => (\n            <Message key={id} username={username} message={message} />\n          ))\n        }\n      </FlipMove>\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/elaineyang/Desktop/react/facebook-messenger-clone/src/message.component/message.component.jsx",["27"],"import React, { forwardRef } from 'react';\nimport { Card, CardContent, Typography } from '@material-ui/core';\n\nimport './message.component.css'\n\nconst Message = forwardRef(({ message, username }, ref) => {\n  const isUser = username == message.username;\n\n  return (\n    <div ref={ref} className={`message ${isUser && 'mssage__user'}`}>\n      <div className=\"message__username\">{!isUser && `${message.username || 'Unknown User'}`}</div>\n      <Card className={isUser ? \"mssage__userCard\" : \"mssage__guestCard\"}>\n         \n        <CardContent>\n          <Typography\n            color=\"white\"\n            variant=\"h5\"\n            component=\"h2\"\n          >\n          \n          {message.message}\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n})\n\nexport default Message;\n","/Users/elaineyang/Desktop/react/facebook-messenger-clone/src/index.js",[],"/Users/elaineyang/Desktop/react/facebook-messenger-clone/src/reportWebVitals.js",[],"/Users/elaineyang/Desktop/react/facebook-messenger-clone/src/firebase.js",[],{"ruleId":"28","severity":1,"message":"29","line":4,"column":10,"nodeType":"30","messageId":"31","endLine":4,"endColumn":16},{"ruleId":"28","severity":1,"message":"32","line":4,"column":31,"nodeType":"30","messageId":"31","endLine":4,"endColumn":41},{"ruleId":"33","severity":1,"message":"34","line":53,"column":7,"nodeType":"35","endLine":53,"endColumn":111},{"ruleId":"36","severity":1,"message":"37","line":7,"column":27,"nodeType":"38","messageId":"39","endLine":7,"endColumn":29},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'InputLabel' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]